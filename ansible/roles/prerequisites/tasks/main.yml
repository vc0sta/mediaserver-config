---
- name: Install podman and podman-compose
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - podman
    - podman-compose
  tags:
    - prerequisites

- name: Create a podman network
  containers.podman.podman_network:
    name: "{{ container_network_name }}"
  tags:
    - prerequisites

- name: ensure applications directory is in place
  file:
    path: "{{ target_dir }}/{{ item.name }}"
    state: directory
  when: item.active
  with_items: "{{ services }}"
  tags:
    - prerequisites

- name: Copy docker-compose files to each directory
  template:
    src: "{{ base_dir }}/{{ item.name }}/docker-compose.yml.j2"
    dest: "{{ target_dir }}/{{ item.name }}/docker-compose.yml"
  when: item.active
  with_items: "{{ services }}"
  tags:
    - prerequisites

- name: generate nginx config
  template:
    src: "{{ base_dir }}/nginx/nginx.conf.j2"
    dest: "{{ target_dir }}/nginx/nginx.conf"
  when: "{{ (services |  selectattr('name', 'search', 'nginx') | list | first).active }}"
  tags:
    - nginx

- name: generate raneto config
  synchronize:
    src: "{{ base_dir }}/raneto/{{ item }}"
    dest: "{{ target_dir }}/raneto/"
  when: "{{ (services |  selectattr('name', 'search', 'raneto') | list | first).active }}"
  with_items:
    - config
    - default
  tags:
    - raneto

- name: Stop podman containers
  shell: "podman-compose -f {{ target_dir }}/{{ item.name }}/docker-compose.yml down"
  ignore_errors: yes
  with_items: "{{ services }}"
  tags:
    - stop

# - name: Delete containers
#   shell: "podman rm {{ item.name }}"
#   with_items: "{{ services }}"
#   ignore_errors: yes
#   tags:
#     - start

- name: Start podman containers
  shell: "podman-compose -f {{ target_dir }}/{{ item.name }}/docker-compose.yml up -d"
  when: item.active
  with_items: "{{ services }}"
  tags:
    - start
