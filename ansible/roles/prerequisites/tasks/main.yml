---
- name: Install podman and podman-compose
  # become: yes
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - podman
    - podman-compose
  tags:
    - prerequisites

- name: Create a podman network
  containers.podman.podman_network:
    name: "{{ container_network_name }}"
  tags:
    - prerequisites

- name: ensure applications directory is in place
  file:
    path: "{{ target_dir }}/{{ item.name }}"
    state: directory
  when: item.active
  with_items: "{{ services }}"
  tags:
    - prerequisites

- name: Copy podman-compose files to each directory
  template:
    src: "{{ base_dir }}/{{ item.name }}/podman-compose.yml.j2"
    dest: "{{ target_dir }}/{{ item.name }}/podman-compose.yml"
  when: item.active
  with_items: "{{ services }}"
  tags:
    - prerequisites

- name: Stop podman containers
  shell: "podman-compose -f {{ target_dir }}/{{ item.name }}/podman-compose.yml down"
  ignore_errors: yes
  with_items: "{{ services }}"
  tags:
    - stop

- name: Start podman containers
  shell: "podman-compose -f {{ target_dir }}/{{ item.name }}/podman-compose.yml up -d"
  when: item.active and item.name != 'nginx'
  with_items: "{{ services }}"
  tags:
    - start
  async: 60
  poll: 5

- name: generate nginx config
  template:
    src: "{{ base_dir }}/nginx/nginx.conf.j2"
    dest: "{{ target_dir }}/nginx/nginx.conf"
  when: "{{ (services |  selectattr('name', 'search', 'nginx') | list | first).active }}"
  tags:
    - nginx

- name: Start nginx
  shell: "podman-compose -f {{ target_dir }}/nginx/podman-compose.yml up -d"
  when: "{{ (services |  selectattr('name', 'search', 'nginx') | list | first).active }}"
  tags:
    - nginx